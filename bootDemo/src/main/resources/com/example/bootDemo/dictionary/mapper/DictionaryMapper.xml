<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.bootDemo.dictionary.mapper.DictionaryMapper">

    <resultMap id="BaseResultMap" type="com.example.bootDemo.dictionary.model.DictionaryData">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="data_desc" property="dataDesc" jdbcType="VARCHAR"/>
        <result column="parent_id" property="parentId" jdbcType="INTEGER"/>
        <result column="seq" property="seq" jdbcType="VARCHAR"/>
        <result column="mark" property="mark" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="BaseResultMap2" type="com.example.bootDemo.dictionary.model.DictionaryType">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="type_desc" property="typeDesc" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="getDictionaryTypeCount" parameterType="com.example.bootDemo.dictionary.vo.DictionarySearchVO"
            resultType="Integer">
        select count(1) from dictionary_type;
    </select>

    <select id="getDictionaryTypeList" parameterType="com.example.bootDemo.dictionary.vo.DictionarySearchVO"
            resultMap="BaseResultMap2">
        select id,code,type_desc
         from dictionary_type
         limit ( #{startRow}, #{pageSize} )
    </select>

    <select id="getDictionaryDataCount" parameterType="com.example.bootDemo.dictionary.vo.DictionarySearchVO"
            resultType="Integer">
        select count(1) from dictionary_data t
          where t.id in (
            select data_id from dictionary_type_data where type_id = #{typeId,jdbcType=INTEGER}
          )
    </select>

    <select id="getDictionaryDataList" parameterType="com.example.bootDemo.dictionary.vo.DictionarySearchVO"
            resultMap="BaseResultMap">
       select id, code, data_desc, parent_id , seq, mark
          from dictionary_data t
          where t.id in (
            select data_id from dictionary_type_data where type_id = #{typeId,jdbcType=INTEGER}
          )
          limit ( #{startRow}, #{pageSize} )
          order by seq
    </select>

</mapper>